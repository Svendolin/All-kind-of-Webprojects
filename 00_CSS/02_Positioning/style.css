/* === Small CSS Reset === */
*{
  margin: 0;
  padding: 0;
}
*, *::after, *::before{
  box-sizing: border-box;
}

body {
  background: #222;
}

/* IMPORTANT NOTE:
    Parental Element "CONTAINER" is assigned with:
  - Position: Relative;
  (which means, that the child elements will focus on that.
  If all the other parents have no position assignement,
  they will be positioned according to the body)
*/
.container {
  width: 800px;
  height: 800px;
  border: solid 1px black;
  background: #555;
  position: relative;
  z-index: -100;
  margin: 4rem auto;
}

/* All the "Box" Elements with that class do have these values */
.box {
  height: 100px;
  width: 100px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 1rem;
  font-weight: 500;
  box-sizing: content-box;
  display: block; /* Default is the block element, because they are all divs - change it to "inline-block" to stick them side by side with width and height ("inline" doesnt have it*/
}

/* Static Positioning. Top, bottom, z-index etc doesnt work */
.static {
  border: solid 1px lime;
  background: rgb(82, 255, 82);
}

/* Relative Positioning. Element remains in the normal flow */
.relative {
  border: solid 1px hotpink;
  background: rgb(255, 138, 197);
  position: relative;
  left: 15px;
  top: 8px;
  z-index: 1;
}

/* Absolute Positioning to their parent. Top, Bottom etc works */
.absolute {
  border: solid 1px rgb(255, 105, 105);
  background: rgb(255, 138, 138);
  position: absolute;
  top: 15px;
  left: 90px;
  z-index: -1;
  text-align: right;
}

/* Fixed Positioning to the viewport. Top, Bottom etc works */
.fixed {
  border: solid 1px rgb(60, 38, 187);
  background: rgb(138, 159, 255);
  position: fixed;
  left: 30px;
  bottom: 0;
}

/* Sticky Positioning to the viewport. it will move the fixed way until the viewport has reached 50px spacing on top by scrolling down */
.sticky {
  border: solid 1px rgb(230, 226, 13);
  background: rgb(255, 217, 3);
  position: sticky;
  top: 50px;
}