// ------------------------------------
// Divide and Conquer (Import to other files)
// ------------------------------------



@import "scss/company-colors";
@import "scss/fonts";


// ------------------------------------
// Tags + Basic Elements
// ------------------------------------

body {
  background-color: #F5B1c2;
  font-family: 'Fredoka';
}

header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0px 64px;
  // nested navigation
  nav {
    display: flex;
    align-items: center;
  }
}

ul {
  list-style: none;
  display: flex;
}

li {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: 32px;
}

li a {
  display: block;
  text-decoration: none;
  color: white;
  // Nesting: With the & symbol, we can nest the pseudo-class inside the selector
  &:hover {
    color: $main-color;
  }  
}

h1 {
  color: $main-color;
  font-family: 'Pacifico';
  text-align: center;
}

// ------------------------------------
// Mixins
// ------------------------------------

/* Mixins: properties we need more often. In this case in .icecream and .circle */
@mixin rightCorner() {
  position: absolute;
  bottom: 0;
  right: 35vw;
}

/* Mixins: Are also perfect do declare variables. In this case we declare how to make a circle */
/* $size = is in that case a mandatory variable while...
   $bgColor = is a optional variable with a default value and needs to be written at the end of a mixin () */
@mixin circle($size, $bgColor: #ff8a98) {
  width: $size;
  height: $size;
  background-color: $bgColor;
  border-radius: 50%;
}

// ------------------------------------
// Classes which are going to be extended into other classes
// ------------------------------------

.button {
  background-color: white;
  color: black;
  padding: 8px 16px;
  border-radius: 8px;
  border: none;
  font-size: 16px;
  font-family: inherit;  // inherit the font-family from the parent element (body)
  cursor: pointer;
  &:hover {
    filter:brightness(1.3); // filter: is a CSS3 property which can be used to change the brightness of an element
    box-shadow: 2px 2px 2px rgba(0,0,0,0.2);
  }
}

// ------------------------------------
// Classes + IDs
// ------------------------------------

.button-main {
  @extend .button; // extend the .button class (Additionally receive all basic values from .button)
  background-color: $main-color;
  margin-right: 10px;
  // Overwrite the .button class
  color: white !important; // !important is a bad practice, but we need it here to overwrite the color from .button
}

.icecream {
  height: auto;
  max-width: 400px;
  width: 100%;
  @include rightCorner();
}

.circle {
  @include rightCorner();
  @include circle(600px); // $size = 600px, as you can see in the mixin
}

.main-text {
  color: white;
  position: absolute;
  top: 25vh;
  left: 64px;
  font-size: 40px;
  text-transform: uppercase;
}

.main-color {
  color: $main-color;
}

